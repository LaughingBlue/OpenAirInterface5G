/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "/home/labuser/Desktop/openairinterface5g_f1ap/openair2/RRC/LTE/MESSAGES/asn1c/ASN1_files/lte-rrc-14.7.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -D /home/labuser/Desktop/openairinterface5g_f1ap/cmake_targets/lte_build_oai/build/CMakeFiles/RRC_Rel14`
 */

#ifndef	_LTE_SL_GapPattern_r13_H_
#define	_LTE_SL_GapPattern_r13_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "LTE_SL-OffsetIndicator-r12.h"
#include <BIT_STRING.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LTE_SL_GapPattern_r13__gapPeriod_r13 {
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf40	= 0,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf60	= 1,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf70	= 2,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf80	= 3,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf120	= 4,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf140	= 5,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf160	= 6,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf240	= 7,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf280	= 8,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf320	= 9,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf640	= 10,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf1280	= 11,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf2560	= 12,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf5120	= 13,
	LTE_SL_GapPattern_r13__gapPeriod_r13_sf10240	= 14
} e_LTE_SL_GapPattern_r13__gapPeriod_r13;

/* LTE_SL-GapPattern-r13 */
typedef struct LTE_SL_GapPattern_r13 {
	long	 gapPeriod_r13;
	LTE_SL_OffsetIndicator_r12_t	 gapOffset_r12;
	BIT_STRING_t	 gapSubframeBitmap_r13;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LTE_SL_GapPattern_r13_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LTE_gapPeriod_r13_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LTE_SL_GapPattern_r13;
extern asn_SEQUENCE_specifics_t asn_SPC_LTE_SL_GapPattern_r13_specs_1;
extern asn_TYPE_member_t asn_MBR_LTE_SL_GapPattern_r13_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _LTE_SL_GapPattern_r13_H_ */
#include <asn_internal.h>
