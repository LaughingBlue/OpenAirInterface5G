/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "/home/labuser/Desktop/openairinterface5g_f1ap/openair2/RRC/LTE/MESSAGES/asn1c/ASN1_files/lte-rrc-14.7.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-PER -no-gen-OER -no-gen-example -D /home/labuser/Desktop/openairinterface5g_f1ap/cmake_targets/lte_build_oai/build/CMakeFiles/RRC_Rel14`
 */

#ifndef	_LTE_MeasObjectEUTRA_H_
#define	_LTE_MeasObjectEUTRA_H_


#include <asn_application.h>

/* Including external dependencies */
#include "LTE_ARFCN-ValueEUTRA.h"
#include "LTE_AllowedMeasBandwidth.h"
#include "LTE_PresenceAntennaPort1.h"
#include "LTE_NeighCellConfig.h"
#include "LTE_Q-OffsetRange.h"
#include "LTE_PhysCellId.h"
#include "LTE_MeasCycleSCell-r10.h"
#include <constr_SEQUENCE.h>
#include <BOOLEAN.h>
#include <NULL.h>
#include <NativeEnumerated.h>
#include <constr_CHOICE.h>
#include "LTE_ARFCN-ValueEUTRA-v9e0.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LTE_MeasObjectEUTRA__ext3__t312_r12_PR {
	LTE_MeasObjectEUTRA__ext3__t312_r12_PR_NOTHING,	/* No components present */
	LTE_MeasObjectEUTRA__ext3__t312_r12_PR_release,
	LTE_MeasObjectEUTRA__ext3__t312_r12_PR_setup
} LTE_MeasObjectEUTRA__ext3__t312_r12_PR;
typedef enum LTE_MeasObjectEUTRA__ext3__t312_r12__setup {
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms0	= 0,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms50	= 1,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms100	= 2,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms200	= 3,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms300	= 4,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms400	= 5,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms500	= 6,
	LTE_MeasObjectEUTRA__ext3__t312_r12__setup_ms1000	= 7
} e_LTE_MeasObjectEUTRA__ext3__t312_r12__setup;

/* Forward declarations */
struct LTE_CellIndexList;
struct LTE_CellsToAddModList;
struct LTE_BlackCellsToAddModList;
struct LTE_MeasSubframePatternConfigNeigh_r10;
struct LTE_AltTTT_CellsToAddModList_r12;
struct LTE_MeasDS_Config_r12;
struct LTE_WhiteCellsToAddModList_r13;
struct LTE_RMTC_Config_r13;
struct LTE_Tx_ResourcePoolMeasList_r14;

/* LTE_MeasObjectEUTRA */
typedef struct LTE_MeasObjectEUTRA {
	LTE_ARFCN_ValueEUTRA_t	 carrierFreq;
	LTE_AllowedMeasBandwidth_t	 allowedMeasBandwidth;
	LTE_PresenceAntennaPort1_t	 presenceAntennaPort1;
	LTE_NeighCellConfig_t	 neighCellConfig;
	LTE_Q_OffsetRange_t	*offsetFreq;	/* DEFAULT 15 */
	struct LTE_CellIndexList	*cellsToRemoveList;	/* OPTIONAL */
	struct LTE_CellsToAddModList	*cellsToAddModList;	/* OPTIONAL */
	struct LTE_CellIndexList	*blackCellsToRemoveList;	/* OPTIONAL */
	struct LTE_BlackCellsToAddModList	*blackCellsToAddModList;	/* OPTIONAL */
	LTE_PhysCellId_t	*cellForWhichToReportCGI;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct LTE_MeasObjectEUTRA__ext1 {
		LTE_MeasCycleSCell_r10_t	*measCycleSCell_r10;	/* OPTIONAL */
		struct LTE_MeasSubframePatternConfigNeigh_r10	*measSubframePatternConfigNeigh_r10;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct LTE_MeasObjectEUTRA__ext2 {
		BOOLEAN_t	*widebandRSRQ_Meas_r11;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct LTE_MeasObjectEUTRA__ext3 {
		struct LTE_CellIndexList	*altTTT_CellsToRemoveList_r12;	/* OPTIONAL */
		struct LTE_AltTTT_CellsToAddModList_r12	*altTTT_CellsToAddModList_r12;	/* OPTIONAL */
		struct LTE_MeasObjectEUTRA__ext3__t312_r12 {
			LTE_MeasObjectEUTRA__ext3__t312_r12_PR present;
			union LTE_MeasObjectEUTRA__LTE_ext3__LTE_t312_r12_u {
				NULL_t	 release;
				long	 setup;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *t312_r12;
		BOOLEAN_t	*reducedMeasPerformance_r12;	/* OPTIONAL */
		struct LTE_MeasDS_Config_r12	*measDS_Config_r12;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	struct LTE_MeasObjectEUTRA__ext4 {
		struct LTE_CellIndexList	*whiteCellsToRemoveList_r13;	/* OPTIONAL */
		struct LTE_WhiteCellsToAddModList_r13	*whiteCellsToAddModList_r13;	/* OPTIONAL */
		struct LTE_RMTC_Config_r13	*rmtc_Config_r13;	/* OPTIONAL */
		LTE_ARFCN_ValueEUTRA_v9e0_t	*carrierFreq_r13;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext4;
	struct LTE_MeasObjectEUTRA__ext5 {
		struct LTE_Tx_ResourcePoolMeasList_r14	*tx_ResourcePoolToRemoveList_r14;	/* OPTIONAL */
		struct LTE_Tx_ResourcePoolMeasList_r14	*tx_ResourcePoolToAddList_r14;	/* OPTIONAL */
		BOOLEAN_t	*fembms_MixedCarrier_r14;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext5;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LTE_MeasObjectEUTRA_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LTE_setup_23;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LTE_MeasObjectEUTRA;
extern asn_SEQUENCE_specifics_t asn_SPC_LTE_MeasObjectEUTRA_specs_1;
extern asn_TYPE_member_t asn_MBR_LTE_MeasObjectEUTRA_1[15];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "LTE_CellIndexList.h"
#include "LTE_CellsToAddModList.h"
#include "LTE_BlackCellsToAddModList.h"
#include "LTE_MeasSubframePatternConfigNeigh-r10.h"
#include "LTE_AltTTT-CellsToAddModList-r12.h"
#include "LTE_MeasDS-Config-r12.h"
#include "LTE_WhiteCellsToAddModList-r13.h"
#include "LTE_RMTC-Config-r13.h"
#include "LTE_Tx-ResourcePoolMeasList-r14.h"

#endif	/* _LTE_MeasObjectEUTRA_H_ */
#include <asn_internal.h>
